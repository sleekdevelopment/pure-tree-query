!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={STRING:"string",NUMBER:"number",BOOLEAN:"boolean",DATE:"date"},i="TREE_ACTIONS:ADD",a="TREE_ACTIONS:REMOVE",l="TREE_ACTIONS:UPDATE",s="AND",o="OR",u=function(){function e(e,t,r){void 0===r&&(r=[]),this.options=e,this.tree={},this.originData=r,this.containerSelector=t,this.initConditionOfTypes(),this.treeQueryClickListener(),this.treeQueryChangeListener(),this.initTree(),this.defaultFilter(),this.containerRef=document.getElementById("criteria-container")}return e.prototype.initTree=function(){this.tree={condition:s,id:"0",rules:[],valid:!0}},e.prototype.getQuery=function(){return this.tree},e.prototype.setData=function(e){this.originData=e,this.filteredData=e},e.prototype.checkIfLabelExist=function(e,t){return t&&t[e]},e.prototype.stringRuleHandler=function(e,t){switch(e.operator){case"equal":return this.checkIfLabelExist(e.field,t)&&t[e.field]==e.value;case"not equal":return!this.checkIfLabelExist(e.field,t)||t[e.field]!=e.value;case"begins with":return this.checkIfLabelExist(e.field,t)&&t[e.field].startsWith(e.value);case"not begins with":return!this.checkIfLabelExist(e.field,t)||!t[e.field].startsWith(e.value);case"contains":return this.checkIfLabelExist(e.field,t)&&t[e.field].includes(e.value);case"not contains":return!this.checkIfLabelExist(e.field,t)||!t[e.field].includes(e.value);case"end with":return this.checkIfLabelExist(e.field,t)&&t[e.field].endsWith(e.value);case"not end with":return!this.checkIfLabelExist(e.field,t)||!t[e.field].endsWith(e.value);case"is empty":return this.checkIfLabelExist(e.field,t)&&0==t[e.field].length;case"is not empty":return this.checkIfLabelExist(e.field,t)&&t[e.field].length>0;default:return!1}},e.prototype.numberRuleHandler=function(e,t){try{switch(e.operator){case"equal":return this.checkIfLabelExist(e.field,t)&&parseInt(t[e.field])==parseInt(e.value);case"not equal":return!this.checkIfLabelExist(e.field,t)||parseInt(t[e.field])!=parseInt(e.value);case"less":return this.checkIfLabelExist(e.field,t)&&parseInt(t[e.field])<parseInt(e.value);case"less or equal":return this.checkIfLabelExist(e.field,t)&&parseInt(t[e.field])<=parseInt(e.value);case"greater":return this.checkIfLabelExist(e.field,t)&&parseInt(t[e.field])>parseInt(e.value);case"greater or equal":return this.checkIfLabelExist(e.field,t)&&parseInt(t[e.field])>=parseInt(e.value);case"between":return this.checkIfLabelExist(e.field,t)&&parseInt(t[e.field])<parseInt(e.value.max)&&parseInt(t[e.field])>parseInt(e.value.min);case"not between":return!this.checkIfLabelExist(e.field,t)||!(parseInt(t[e.field])<parseInt(e.value.max)&&parseInt(t[e.field])>parseInt(e.value.min));case"is empty":return this.checkIfLabelExist(e.field,t)&&0==t[e.field].toString().trim().length;case"is not empty":return this.checkIfLabelExist(e.field,t)&&t[e.field].toString().trim().length>0;default:return!1}}catch(e){return console.log(e),!1}},e.prototype.dateRuleHandler=function(e,t){var r=this.checkIfLabelExist(e.field,t)&&this.isDate(t[e.field])?Date.parse(t[e.field])/1e3:null;switch(e.operator){case"equal":return this.checkIfLabelExist(e.field,t)&&t[e.field]==e.value;case"not equal":return!(this.checkIfLabelExist(e.field,t)&&t[e.field]!=e.value);case"before":return r&&r<parseInt(e.value);case"before or equal":return r&&r<=parseInt(e.value);case"after":return r&&r>parseInt(e.value);case"after or equal":return r&&r>=parseInt(e.value);case"between":return r&&r<parseInt(e.value.max)&&r>parseInt(e.value.min);case"not between":return!r||!(r<parseInt(e.value.max)&&r>parseInt(e.value.min));case"is empty":return this.checkIfLabelExist(e.field,t)&&0==t[e.field].toString().trim().length;case"is not empty":return this.checkIfLabelExist(e.field,t)&&t[e.field].toString().trim().length>0;default:return!1}},e.prototype.booleanRuleHandler=function(e,t){return this.checkIfLabelExist(e.field,t)&&t[e.field]==e.value},e.prototype.validationRuleHandler=function(e,t){return"string"==e.type?this.stringRuleHandler(e,t):"number"==e.type?this.numberRuleHandler(e,t):"date"==e.type?this.dateRuleHandler(e,t):"boolean"==e.type?this.booleanRuleHandler(e,t):this.stringRuleHandler(e,t)},e.prototype.filterData=function(e,t,r){void 0===t&&(t="AND"),void 0===r&&(r=[]);for(var n=[],i=0;i<r.length;i++)r[i].rules?n.push(this.filterData(e,r[i].condition,r[i].rules)):r[i]&&r[i].field&&r[i].type&&r[i].operator&&n.push(this.validationRuleHandler(r[i],e));return console.log(n),0==n.length||"AND"==t?n.every(function(e){return e}):n.some(function(e){return e})},e.prototype.getDefaultGroupBranch=function(e){return{id:e,condition:s,rules:[this.getDefaultRule(e+"_0")]}},e.prototype.getDefaultRule=function(e){return{id:e,field:null,type:null,input:null,operator:null,value:null}},e.prototype.defaultFilter=function(){document.querySelector("#criteria-container").insertAdjacentHTML("beforeend",'<ul class="root-ul">'+this.addGroup("0")+"</ul>"),this.updateTreeFilter(i,"0",this.getDefaultRule("0_0")),this.renderResults(this.originData)},e.prototype.validateNumberOrDate=function(e){switch(e.operator){case"between":case"not between":return e&&e.value&&e.value.min&&e.value.max&&!isNaN(e.value.min)&&!isNaN(e.value.max)&&e.value.min<e.value.max;case"is empty":case"is not empty":return!e.value||0==e.value.length;default:return e&&e.value&&!isNaN(e.value)}},e.prototype.validateString=function(e){switch(e.operator){case"is empty":case"is not empty":return!e.value||0==e.value.length;default:return e.value&&e.value.length>0}},e.prototype.checkIfRuleValid=function(e){switch(e.type){case n.STRING:case n.BOOLEAN:return this.validateString(e);case n.NUMBER:case n.DATE:return this.validateNumberOrDate(e)}},e.prototype.markAsError=function(e){var t=this.containerRef.querySelector('[data-index="'+e.id+'"]');this.addClass(t,"invalid-rule")},e.prototype.markAsValid=function(e){var t=this.containerRef.querySelector('[data-index="'+e.id+'"]');this.removeClass(t,"invalid-rule")},e.prototype.validateTree=function(e){for(var t=[],r=0;r<e.rules.length;r++)if(e.rules[r]&&e.rules[r].rules)t.push(this.validateTree(e.rules[r]));else if(e[r]&&e[r].field&&e[r].type&&e[r].operator){var n=this.checkIfRuleValid(e.rules[r]);n?this.markAsValid(e.rules[r]):this.markAsError(e.rules[r]),t.push(n),t.push(this.checkIfRuleValid(e.rules[r]))}return t.every(function(e){return e})},e.prototype.getParentIndex=function(e){var t=e.lastIndexOf("_");return"0"!=e?e.substring(0,t):"0"},e.prototype.findBranchById=function(e,t){if(void 0===t&&(t=null),(t=t&&"0"!=e?t:this.tree).id==e)return t;for(var r=null,n=0;n<t.rules.length;n++){if(t.rules[n].id==e){r=t.rules[n];break}t.rules[n].rules&&t.rules[n].rules.length>0&&(r=this.findBranchById(e,t.rules[n]))}return r},e.prototype.updateTreeFilter=function(e,t,r){if(void 0===r&&(r=null),e==i&&null!=r)(s=this.findBranchById(t)).rules.push(r);else if(e==a)for(var n=this.getParentIndex(t),s=this.findBranchById(n),o=0;o<s.rules.length;o++)s.rules[o].id==t&&s.rules.splice(o,1);else if(e==l){n=this.getParentIndex(t),s=this.findBranchById(n);if("0"==t)s.condition=r.condition;else for(o=0;o<s.rules.length;o++)s.rules[o].id==t&&(s.rules[o]=Object.assign({},s.rules[o],r))}console.log(this.tree)},e.prototype.removeChilds=function(e){for(var t;t=e.lastChild;)e.removeChild(t)},e.prototype.initConditionOfTypes=function(){this.conditionOfTypes={},this.conditionOfTypes[n.STRING]=["equal","not equal","begins with","not begins with","contains","not contains","end with","not end with","is empty","is not empty"],this.conditionOfTypes[n.NUMBER]=["equal","not equal","less","less or equal","greater","greater or equal","between","not between","is empty","is not empty"],this.conditionOfTypes[n.DATE]=["between","not between","after","after or equal","before","before or equal","equal","not equal","is empty","is not empty"],this.conditionOfTypes[n.BOOLEAN]=["true","false"]},e.prototype.addRule=function(e){return'<li class="rule" data-index="'+e+'">\n                    <div class="delete-rule">\n                        <button type="button" class="btn btn-xs btn-danger" data-action="delete-rule">\n                            Delete\n                        </button>\n                    </div>\n                    <div class="rule-filter-criteria">\n                        <select class="listen-to-change form-control" data-action="select-criteria">\n                            <option value="---">---</option>\n                            '+this.options.rules.map(function(e){return'<option value="'+e.type+'">'+e.label+"</option>"})+'\n                        </select>\n                    </div>\n                    <div class="rule-filter-operator"></div>\n                    <div class="rule-filter-value"></div>\n                </li>'},e.prototype.addGroup=function(e){return'<li class="rule rule-group" data-index="'+e+'">\n                    <dl>\n                        <dt class="criteria-panel">\n                            <div class="left">\n                                <label data-id="'+e+'" data-action="add-connection" data-value="'+s+'" class="btn active-operator operator btn-primary">AND</label>\n                                <label data-id="'+e+'" data-action="add-connection" data-value="'+o+'" class="btn operator btn-primary">OR</label>\n                            </div>\n                            <div class="right">\n                                <div class="btn-group pull-right group-actions">\n                                    <button type="button" class="btn btn-xs btn-success" data-action="add-rule">\n                                        Add rule\n                                    </button>\n                                    <button type="button" class="btn btn-xs btn-success" data-action="add-group">\n                                        Add group\n                                    </button>\n                                     <button type="button" class="btn btn-xs btn-danger" data-action="delete-group">\n                                        Delete\n                                    </button>\n                                </div>\n                            </div>\n                        </dt>\n                        <dd>\n                            <ul class="rules-list">\n                                '+this.addRule(e+"_0")+"\n                            </ul>\n                        </dd>\n                    </dl>\n                </li>"},e.prototype.renderInputsByTypes=function(e,t){switch(e){case n.STRING:return void this.renderSelectAndInput(t,this.conditionOfTypes[n.STRING],"text");case n.NUMBER:return void this.renderSelectAndInput(t,this.conditionOfTypes[n.NUMBER],"number");case n.BOOLEAN:return void this.renderInputsForBoolean(t);case n.DATE:return void this.renderSelectAndInput(t,this.conditionOfTypes[n.DATE],"date")}},e.prototype.renderSelectAndInput=function(e,t,r){void 0===r&&(r="text");var n=t.map(function(e){return'<option value="'+e+'">'+e+"</option>"}),i=e.closest(".rule"),a=i.querySelector(".rule-filter-operator"),l=i.querySelector(".rule-filter-value");this.removeChilds(a),this.removeChilds(l),a.insertAdjacentHTML("afterbegin",'<select class="listen-to-change form-control" data-action="select-operator">'+n.join("")+"</select>"),l.insertAdjacentHTML("afterbegin",'<input type="'+r+'" value="" data-action="select-value" class="plugin-input form-control" />')},e.prototype.renderInputsForBoolean=function(e){var t=this.conditionOfTypes[n.BOOLEAN].map(function(e){return'<label><input style="height: auto !important;" class="plugin-input listen-to-change" data-action="select-value" type="radio" name="boolean" value="'+e+'">'+e+"</label>"}).join(""),r=e.closest(".rule"),i=r.querySelector(".rule-filter-operator"),a=r.querySelector(".rule-filter-value");this.removeChilds(i),this.removeChilds(a),a.insertAdjacentHTML("afterbegin",t)},e.prototype.treeQueryClickListener=function(){var e=this;document.getElementById("criteria-container").addEventListener("click",function(t){var r=t.target,n=r.getAttribute("data-action"),s=r.closest(".rule-group");if("add-rule"==n||"add-group"==n){var o=s.querySelector("dd .rules-list"),u=s.getAttribute("data-index"),c="add-group"==n?e.addGroup(u+"_"+o.childElementCount):e.addRule(u+"_"+o.childElementCount);o.insertAdjacentHTML("beforeend",c);var d="add-group"==n?e.getDefaultGroupBranch(u+"_"+(o.childElementCount-1)):e.getDefaultRule(u+"_"+(o.childElementCount-1));e.updateTreeFilter(i,u,d)}else if("delete-rule"==n||"delete-group"==n){var p=r.closest("li.rule"),f=p.getAttribute("data-index");e.removeChilds(p),p.remove(),e.updateTreeFilter(a,f)}else if("add-connection"==n){var h=s.querySelector(".criteria-panel").querySelectorAll(".operator");console.log(h),h.forEach(function(t){return e.removeClass(t,"active-operator")}),e.addClass(r,"active-operator");u=r.getAttribute("data-id");var v=r.getAttribute("data-value");e.updateTreeFilter(l,u,{condition:v}),e.updateResults()}})},e.prototype.treeQueryChangeListener=function(){var e=this;document.getElementById("criteria-container").addEventListener("change",function(t){var r=t.target,n=r.getAttribute("data-action"),i=r.closest("li.rule"),a=i.getAttribute("data-index"),s=i.querySelector(".rule-filter-criteria select"),o=s.options[s.selectedIndex].value,u=s.options[s.selectedIndex].label;if("select-criteria"==n)e.updateTreeFilter(l,a,{field:u,type:o,input:null,operator:e.conditionOfTypes[o][0],value:null}),e.renderInputsByTypes(o,r);else if("select-operator"==n){var c=r.options[r.selectedIndex].value;e.handleOperatorValue(i,c,a,o),e.updateResults()}else if("select-value"==n){c="boolean"==o?"equal":e.getSelectedOperator(i);e.handleSelectValue(i,c,a),e.updateResults()}})},e.prototype.renderResults=function(e){if(this.containerSelector){var t=this.options.rules.map(function(e){return e.label}),r=document.querySelector(this.containerSelector);if(r){var n=e.map(function(e){for(var r='<div class="item-row">',n=0;n<t.length;n++)r=r+'<div class="item-label '+t[n]+'">'+e[t[n]]+"</div>";return r+"</div>"});this.removeChilds(r),r.insertAdjacentHTML("afterbegin",n.join(""))}}},e.prototype.updateResults=function(){var e=this;console.log(this.validateTree(this.tree)),this.originData&&this.originData.length>0&&this.validateTree(this.tree)&&(this.filteredData=this.originData.filter(function(t){return e.filterData(t,e.tree.condition,e.tree.rules)}),this.renderResults(this.filteredData),this.options.onResultChange&&this.options.onResultChange(this.filteredData))},e.prototype.getSelectedOperator=function(e){var t=e.querySelector(".rule-filter-operator select");return t?t.options[t.selectedIndex].value:null},e.prototype.handleSelectValue=function(e,t,r){switch(t){case"between":return void this.updateTreeFilter(l,r,{value:this.getBetweenValue(e)});default:return void this.updateTreeFilter(l,r,{value:this.getInputValue(e)})}},e.prototype.handleOperatorValue=function(e,t,r,n){switch(t){case"between":case"not between":return this.addBetweenHtml(e,n),void this.updateTreeFilter(l,r,{operator:t,value:{min:null,max:null}});case"is empty":case"is not empty":return this.removeValueInputFromChild(e),void this.updateTreeFilter(l,r,{operator:t,value:""});default:return this.addValueInputToChild(e,n),void this.updateTreeFilter(l,r,{operator:t})}},e.prototype.addValueInputToChild=function(e,t){var r=e.querySelector(".rule-filter-value .min"),n=e.querySelector(".rule-filter-value .plugin-input");if(r||!n){this.removeValueInputFromChild(e);var i="number"==t?"number":"text";e.querySelector(".rule-filter-value").insertAdjacentHTML("afterbegin",'<input type="'+i+'" value="" data-action="select-value" class="plugin-input form-control" />')}},e.prototype.removeValueInputFromChild=function(e){var t=e.querySelector(".rule-filter-value");t&&this.removeChilds(t)},e.prototype.addBetweenHtml=function(e,t){void 0===t&&(t="number"),this.removeValueInputFromChild(e);var r='<input type="'+t+'" value="" data-action="select-value"  class="min plugin-input form-control" />\n                        <input type="'+t+'" value="" data-action="select-value"  class="max plugin-input form-control" />';e.querySelector(".rule-filter-value").insertAdjacentHTML("afterbegin",r)},e.prototype.getInputValue=function(e){var t=e.querySelector(".rule-filter-value .plugin-input");return this.isDate(t.value)?Date.parse(t.value):t.value},e.prototype.getBetweenValue=function(e){var t=e.querySelector(".rule-filter-value"),r={};return r.min=t.querySelector(".plugin-input.min").value,r.max=t.querySelector(".plugin-input.max").value,this.isDate(r.min)&&this.isDate(r.max)&&(r.min=Date.parse(r.min)/1e3,r.max=Date.parse(r.max)/1e3),r},e.prototype.isDate=function(e){return isNaN(e)&&!isNaN(new Date(e))},e.prototype.hasClass=function(e,t){return e.classList?e.classList.contains(t):new RegExp("(^| )"+t+"( |$)","gi").test(e.className)},e.prototype.addClass=function(e,t){e&&e.className&&-1==e.className.indexOf(t)&&(e.className+=" "+t)},e.prototype.removeClass=function(e,t){this.hasClass(e,t)&&(e.className=e.className.replace(new RegExp("(\\s|^)"+t+"(\\s|$)")," ").replace(/^\s+|\s+$/g,""))},e.TYPES=n,e}();t.default=u,e.exports=u}]);